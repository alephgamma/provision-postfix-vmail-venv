---
- name: update aws
  hosts: localhost
  become: true
  vars:
    aaki: "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
    asak: "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"
  tasks: 
    - name: add an txt-record
      route53:
        aws_access_key: "{{ aaki }}"
        aws_secret_key: "{{ asak }}"
        state: absent
        zone: "{{ domain }}"
        record: "20230728._domainkey.redspacemonkey.com"
        type: TXT
        value: simple

---
- name: install and configure postfix, opendkim and spf with virtual mailboxes
  hosts: mail
  become: true
  vars:
    version: postfix

    packages:
      - opendkim
      - opendkim-tools
      - pypolicyd-spf
      - opendmarc

    #date: "{{ ansible_date_time.year}}{{ ansible_date_time.month }}{{ ansible_date_time.day }}"
    #date: 20230728
    date: default

    domain: "{{ lookup('env','DOMAIN') }}"
    aaki: "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
    asak: "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"

    #vpath: "/var/mail/vhosts"
    vpath: /var/spool/vmail
    owner: 
      username: centos
      uid: 1010
    vusers:
      - "info"
      - "sales"
    vdirs:
      [ "cur", "new", "tmp" ]

  tasks:

    - name: add an txt-record
      route53:
        aws_access_key: "{{ aaki }}"
        aws_secret_key: "{{ asak }}"
        state: absent
        zone: "{{ domain }}"
        record: "20230728._domainkey.redspacemonkey.com"
        type: TXT
        value: simple
      delegate_to: localhost
        
    - name: install postfix
      yum:
        name: "{{ version }}"
        state: present

    - name: open smtp
      firewalld: 
        zone: public
        service: smtp
        permanent: yes
        immediate: yes
        state: enabled

    - name: create main.cf
      template: 
        src: "main.cf.j2"
        dest: "/etc/postfix/main.cf"

    - name: create vmailbox
      template: 
        src: "vmailbox.j2"
        dest: "/etc/postfix/vmailbox"

    - name: create virtual
      template: 
        src: "virtual.j2"
        dest: "/etc/postfix/virtual"

    - name: create user
      user: 
        name: "{{ owner.username }}"
        uid: "{{ owner.uid }}"

    - name: create the virtual dir
      file:
        state: directory
        path: "{{ vpath }}/{{ domain }}"
        owner: root
        group: root
        mode: '0755'

    - name: create virtual maildir
      file: 
        state: directory
        path: "{{ vpath }}/{{ domain }}/{{ item[0] }}/{{ item[1] }}"
        owner: "{{ owner.username }}"
        group: "{{ owner.username }}"
        mode: '0755'
      with_nested:
        - "{{ vusers }}"
        - "{{ vdirs }}"

    - name: postmap /etc/postfix/vmailbox
      shell:
        cmd: postmap /etc/postfix/vmailbox

    - name: postmap /etc/postfix/virtual
      shell:
        cmd: postmap /etc/postfix/virtual

#==========================================================

    - name: install opendkim, policyd-spf and opendmarc packages
      package:
        name: "{{ packages }}"

    - name: create opendkim.conf
      template:
        src: "opendkim.conf.j2"
        dest: /etc/opendkim.conf
    - name: create SigningTable
      template:
        src: "SigningTable.j2"
        dest: /etc/opendkim/SigningTable
    - name: create KeyTable
      template:
        src: "KeyTable.j2"
        dest: /etc/opendkim/KeyTable
    - name: create TrustedHosts
      template:
        src: "TrustedHosts.j2"
        dest: /etc/opendkim/TrustedHosts

    - name: create the opendkim key dir
      file:
        path: /etc/opendkim/keys/{{ domain }}
        state: directory

#===============================================================================================================
# If the date.txt file does not exist before running the playbook, the DNS record needs to be updated to match
#===============================================================================================================

    - name: create the opendkim keys
      shell: opendkim-genkey -b 2048 -d {{ domain }} -D /etc/opendkim/keys/{{ domain }} -s {{ date }} -v
      args:
        chdir: "/etc/opendkim/keys/{{ domain }}"
        creates: "{{ date }}.txt"

#=================================

    - name: set opendkim 1
      shell:
        cmd: postconf -e 'milter_default_action=accept'

    - name: set opendkim 2
      shell:
        cmd: postconf -e 'milter_protocol=6'

    - name: set opendkim 3
      shell:
        cmd: postconf -e 'smtpd_milters=inet:127.0.0.1:8891'

    - name: set opendkim 4
      shell:
        cmd: postconf -e 'non_smtpd_milters=$smtpd_milters'

    - name: set the opendkim perms
      file:
        path: /etc/opendkim
        recurse: yes
        owner: opendkim
        group: opendkim

#=================================

    - name: add policyd-spf group
      group:
        name: policyd-spf

    - name: add policyd-spf user
      user:
        name: policyd-spf
        group: policyd-spf
        create_home: no
        shell: /bin/false

    - name: add eye-candy line to main.cf
      shell:
        cmd: echo -e '\n#==========================\n' >> /etc/postfix/main.cf

    - name: update main.cf spf 1
      shell:
        cmd: postconf -e policyd-spf_time_limit=3600

    - name: update main.cf spf 2
      shell:
        cmd: postconf -e smtpd_recipient_restrictions='check_policy_service unix:private/policyd-spf'

    # postconf -M ... ?
    - name: update master.cf
      lineinfile:
        path: /etc/postfix/master.cf
        line: 'policyd-spf  unix  -    n       n       -       0       spawn user=policyd-spf argv=/usr/libexec/postfix/policyd-spf'

#=================================

    - name: configure opendmarc file
      template:
        src: opendmarc.conf.j2
        dest: /etc/opendmarc.conf

    - name: configure main.cf with dmarc milter setting
      lineinfile:
        path: /etc/postfix/main.cf
        line: '\1,inet:127.0.0.1:8893'
        regexp: '(smtpd_milters = inet:127.0.0.1:8891)$'
        backrefs: yes

#=================================

    - name: start and enable opendkim
      systemd:
        name: opendkim
        enabled: yes
        state: restarted

    - name: start and enable opendmarc
      systemd:
        name: opendmarc
        enabled: yes
        state: restarted

    - name: start and enable postfix
      systemd:
        name: postfix
        enabled: yes
        state: restarted
